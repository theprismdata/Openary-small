events {
    worker_connections 1024;
}

http {
    include       /usr/local/etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 파일 업로드 크기 제한 설정
    client_max_body_size  1G;

    proxy_connect_timeout 300s;  # 5분
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;

    server {
        listen 80;
        server_name localhost;
        
        # CORS 헤더 추가
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';


        # 정적 파일 서빙
        location / {
            proxy_pass http://localhost:3000; 
            proxy_http_version 1.1;
            proxy_set_header Host $host;  # 원본 호스트 헤더 전달
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;  # 추가
            proxy_set_header X-Forwarded-Port $server_port;  # 추가
        }

        # 정적 파일 처리
        location ~* \.(html|js|css|png|jpg|jpeg|gif|ico|svg)$ {
            proxy_pass http://nodejs_app;
            proxy_set_header Host $host;
            expires off;
            add_header Cache-Control "no-store";
        }

        # Chat API 프록시
        location /chatapi/ {
            proxy_pass http://localhost:9000/chatapi/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            
            # LLM 응답 시간을 고려한 타임아웃 설정
            proxy_connect_timeout 300s; 
            proxy_send_timeout 300s;    
            proxy_read_timeout 300s;    
        }

        # Management API 프록시
        location /mgmt/ {
            proxy_pass http://localhost:9001/mgmt/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # 404 에러 처리
        error_page 404 /index.html;
    }
}